/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

import java.util.ArrayList;
import java.util.List;

public class App {
  public static void main(String[] args) {


    Graph graph = new Graph();

    graph.addVertex("Sara");
    graph.addVertex("Leen");
    graph.addVertex("Maria");
    graph.addVertex("Alaa");

    graph.addEdge("Sara","Leen");
    graph.addEdge("Sara", "Maria");
    graph.addEdge("Sara", "Alaa");
    graph.addEdge("Leen","Maria");
    graph.addEdge("Maria","Alaa");
    graph.addEdge("Alaa", "Leen");

    System.out.println(graph.printGraph());

    graph.removeEdge("Alaa", "Maria");
    System.out.println();
    System.out.println("delete edge --> "+graph.printGraph());

    graph.removeVertex("Sara");
    System.out.println();
    System.out.println("delete vertex --> " + graph.printGraph());

    System.out.println();
    System.out.println(graph.getVertices());

    System.out.println();
    System.out.println(graph.getNeighbors("Leen"));

    System.out.println();
    System.out.println(graph.breadthTraverse(graph, "Alaa"));

    System.out.println();
    System.out.println(graph.depthFirstTraverse(graph, "Alaa"));

    System.out.println();
    System.out.println(graph.size());

    //        <<< Code Challenge 36 >>>

    Graph graph1 = new Graph();

    graph1.addVertex("Sara");
    graph1.addVertex("Tareq");
    graph1.addVertex("Doaa");
    graph1.addVertex("Mohammad");
    graph1.addVertex("Osaid");
    graph1.addVertex("Naim");

    graph1.addEdge("Sara", "Tareq");
    graph1.addEdge("Tareq", "Doaa");
    graph1.addEdge("Tareq", "Mohammad");
    graph1.addEdge("Doaa", "Osaid");
    graph1.addEdge("Doaa", "Naim");
    graph1.addEdge("Doaa", "Mohammad");
    graph1.addEdge("Mohammad", "Naim");
    graph1.addEdge("Osaid", "Naim");


    System.out.println(graph1.breadthTraverse( "Sara"));

//        <<< Code Challenge 37 >>>

    Graph graph2 = new Graph();

    graph2.addVertex("Pandora");
    graph2.addVertex("Arendelle");
    graph2.addVertex("Metroville");
    graph2.addVertex("Monstroplolis");
    graph2.addVertex("Narnia");
    graph2.addVertex("Naboo");

    graph2.addEdgeWithWeight("Pandora", "Arendelle", 150);
    graph2.addEdgeWithWeight("Arendelle", "Metroville",99);
    graph2.addEdgeWithWeight("Arendelle", "Monstroplolis",42);
    graph2.addEdgeWithWeight("Metroville", "Narnia",37);
    graph2.addEdgeWithWeight("Metroville", "Naboo",26);
    graph2.addEdgeWithWeight("Metroville", "Monstroplolis",105);
    graph2.addEdgeWithWeight("Monstroplolis", "Naboo",73);
    graph2.addEdgeWithWeight("Narnia", "Naboo",250);

    List<String> cities = new ArrayList<>();
    cities.add("Pandora");
    cities.add("Arendelle");
    cities.add("Monstroplolis");

    System.out.println("First Trip ---> "+graph2.businessTrip(graph2,cities));

    //        <<< Code Challenge 38 >>>

    Graph graph3 = new Graph();

    graph3.addVertex("A");
    graph3.addVertex("B");
    graph3.addVertex("C");
    graph3.addVertex("D");
    graph3.addVertex("E");
    graph3.addVertex("F");
    graph3.addVertex("G");
    graph3.addVertex("H");

    graph3.addEdge("A", "D");
    graph3.addEdge("A", "B");
    graph3.addEdge("B", "D");
    graph3.addEdge("B", "C");
    graph3.addEdge("C", "G");
    graph3.addEdge("D", "F");
    graph3.addEdge("D", "H");
    graph3.addEdge("D", "E");
    graph3.addEdge("F", "H");

    System.out.println("Depth first ---> " + graph3.depthFirstTraverse("A"));

  }


}
